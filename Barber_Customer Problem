BARBER-CUSTOMER PROBLEM
A barbershop consists of a waiting room with n chairs and a barber room with one barber chair. If there are no customers to be served, the barber goes to sleep. If a
customer enters the barbershop and all chairs are occupied, then the customer leaves the shop. If the barber is busy but chairs are available, then the customer sits in one of the free chairs. If the barber is asleep, the customer wakes up the barber. Write a program to coordinate the barber and the customers.

#include<stdio.h>
#include<unistd.h>
#include<pthread.h>
#include<semaphore.h>

sem_t mutex,cut;
int data=0,ccount=0;

main()
{
	int i;
	pthread_t ctid[7],btid[7];
	sem_init(&mutex,0,1);
	sem_init(&cut,0,1);
	for(i=0;i<=2;i++)
	{
		pthread_create(&btid[i],NULL,*barber,i);
		pthread_create(&ctid[i],NULL,*customer,i);
	}
	for(i=0;i=2;i++)
	{
		pthread_join(btid[i],NULL);
		pthread_join(ctid[i],NULL);
	}
}
void *customer(void *arg)
{
	int f;
	f=((int)arg);
	sem_wait(&mutex);
	ccount=ccount+1;
	if(ccount=1)
	{
		sem_wait(&cut);
		sem_post(&mutex);
		printf("Customer is sitting in the barber chair");
		sleep(1);
		sem_wait(&mutex);
		ccount=ccount-1;
		if(ccount=0)
		{
			sem_post(&cut);
			sem_post(&mutex);
		}
	}
}
void *barber(void *arg)
{
	int f;
	f=((int)arg);
	sem_wait(&cut);
	data++;
	printF("Barber is busy");
	sleep(1);
	sem_post(&cut);
}
